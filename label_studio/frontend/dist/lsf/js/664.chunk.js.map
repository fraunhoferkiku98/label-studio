{"version":3,"file":"static/js/664.chunk.js","mappings":"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","sources":["webpack://LabelStudio/webpack/universalModuleDefinition","webpack://LabelStudio/./src/lib/AudioUltra/Common/Worker/index.ts","webpack://LabelStudio/./src/lib/AudioUltra/Media/SplitChannelWorker.ts","webpack://LabelStudio/webpack/bootstrap","webpack://LabelStudio/webpack/runtime/define property getters","webpack://LabelStudio/webpack/runtime/harmony module decorator","webpack://LabelStudio/webpack/runtime/hasOwnProperty shorthand","webpack://LabelStudio/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LabelStudio\"] = factory();\n\telse\n\t\troot[\"LabelStudio\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","type MessengerResponder = (result: Record<string, any>) => void;\r\n\r\ntype MessengerCallback = (data: any, storage: Record<string, any>, respond: MessengerResponder) => void;\r\n\r\ntype MessengerInput = {\r\n  compute: MessengerCallback,\r\n  precompute?: MessengerCallback,\r\n}\r\n\r\nexport class ComputeWorker {\r\n  private worker: Worker;\r\n\r\n  static Messenger = {\r\n    receive({\r\n      compute: computeCallback,\r\n      precompute: precomputeCallback,\r\n    }: MessengerInput) {\r\n      const storage: Record<string, any> = {};\r\n\r\n      const storeData = (e: MessageEvent) => {\r\n        Object.assign(storage, e.data.data);\r\n      };\r\n\r\n      const compute = (data: any, eventId: string) => {\r\n        const respond = (result: Record<string, any>) => {\r\n          self.postMessage({\r\n            result,\r\n            eventId,\r\n          });\r\n        };\r\n\r\n        computeCallback(data, storage, respond);\r\n      };\r\n\r\n      const precompute = (data: any) => {\r\n        precomputeCallback?.(data, storage, (result) => {\r\n          Object.assign(storage, result);\r\n        });\r\n      };\r\n\r\n      const getStorage = (eventId: string) => {\r\n        self.postMessage({\r\n          result: storage,\r\n          eventId,\r\n        });\r\n      };\r\n\r\n      self.addEventListener('message', (e) => {\r\n        if (!e.data) return;\r\n\r\n        const { data, type, eventId } = e.data;\r\n\r\n        switch (type) {\r\n          case 'compute': compute(data, eventId); break;\r\n          case 'precompute': precompute(data); break;\r\n          case 'store': storeData(e); break;\r\n          case 'getStorage': getStorage(eventId); break;\r\n        }\r\n      });\r\n    },\r\n  };\r\n\r\n  constructor(url: Worker) {\r\n    this.worker = url;\r\n  }\r\n\r\n  async compute(data: Record<string, any>) {\r\n    const result = await this.sendMessage(this.worker, {\r\n      data,\r\n      type: 'compute',\r\n    }, true);\r\n\r\n    return result?.data?.result?.data;\r\n  }\r\n\r\n  async precompute(data: Record<string, any>) {\r\n    await this.sendMessage(this.worker, {\r\n      data,\r\n      type: 'precompute',\r\n    });\r\n  }\r\n\r\n  async store(data: Record<string, any>) {\r\n    await this.sendMessage(this.worker, {\r\n      data,\r\n      type: 'store',\r\n    });\r\n  }\r\n\r\n  async getStorage() {\r\n    const response = await this.sendMessage(this.worker, {\r\n      type: 'getStorage',\r\n    }, true);\r\n\r\n    return response?.data?.result;\r\n  }\r\n\r\n  destroy() {\r\n    this.worker.terminate();\r\n  }\r\n\r\n  private sendMessage(worker: Worker, data: Record<string, any>, waitResponse = false) {\r\n    return new Promise<MessageEvent | undefined>((resolve) => {\r\n      const eventId = Math.random().toString();\r\n\r\n      if (waitResponse) {\r\n        const resolver = (e: MessageEvent) => {\r\n          if (eventId === e.data.eventId) {\r\n            worker.removeEventListener('message', resolver);\r\n            resolve(e);\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', resolver);\r\n      }\r\n\r\n      worker.postMessage({ ...data, eventId });\r\n\r\n      if (!waitResponse) resolve(undefined);\r\n    });\r\n  }\r\n}\r\n","import { ComputeWorker } from '../Common/Worker';\r\n\r\nexport function splitChannels({\r\n  value,\r\n  channelCount,\r\n}: {\r\n  value: Float32Array,\r\n  channelCount: number,\r\n}) : Float32Array[] {\r\n  const channels: Float32Array[] = [];\r\n\r\n  // Create new Float32Array for each channel\r\n  for (let c = 0; c < channelCount; c++) {\r\n    channels[c] = new Float32Array(value.length / channelCount);\r\n  }\r\n\r\n  // Split the channels into separate Float32Array samples\r\n  for (let sample = 0; sample < value.length; sample++) {\r\n    // interleaved channels\r\n    // ie. 2 channels\r\n    // [channel1, channel2, channel1, channel2, ...]\r\n    const channel = sample % channelCount;\r\n    // index of the channel sample\r\n    // ie. 2 channels\r\n    // sample = 8, channel = 0, channelIndex = 4\r\n    // sample = 9, channel = 1, channelIndex = 4\r\n    // sample = 10, channel = 0, channelIndex = 5\r\n    // sample = 11, channel = 1, channelIndex = 5\r\n    const channelIndex = Math.floor(sample / channelCount);\r\n\r\n    channels[channel][channelIndex] = value[sample];\r\n  }\r\n\r\n  return channels;\r\n}\r\n\r\nComputeWorker.Messenger.receive({\r\n  compute: (data, _storage, respond) => {\r\n    respond({\r\n      data: splitChannels(data),\r\n    });\r\n  },\r\n\r\n  precompute: (data, _storage, respond) => {\r\n    respond({\r\n      data: splitChannels(data),\r\n    });\r\n  },\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(26664);\n"],"names":["root","factory","exports","module","define","amd","self","this","ComputeWorker","constructor","url","worker","async","data","result","sendMessage","type","response","destroy","terminate","waitResponse","Promise","resolve","eventId","Math","random","toString","resolver","e","removeEventListener","addEventListener","postMessage","undefined","receive","compute","computeCallback","precompute","precomputeCallback","storage","Object","assign","storeData","getStorage","splitChannels","value","channelCount","channels","c","Float32Array","length","sample","channel","channelIndex","floor","_storage","respond","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__"],"sourceRoot":""}